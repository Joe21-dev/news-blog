[
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "UserChangeForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "SimpleTestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "FormView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "UserPassesTestMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "SingleObjectMixin",
        "importPath": "django.views.generic.detail",
        "description": "django.views.generic.detail",
        "isExtraImport": true,
        "detail": "django.views.generic.detail",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic.base",
        "description": "django.views.generic.base",
        "isExtraImport": true,
        "detail": "django.views.generic.base",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0001_initial",
        "description": "accounts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"auth\", \"0012_alter_user_first_name_max_length\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"CustomUser\",\n            fields=[\n                (",
        "detail": "accounts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CustomUserAdmin",
        "kind": 6,
        "importPath": "accounts.admin",
        "description": "accounts.admin",
        "peekOfCode": "class CustomUserAdmin(UserAdmin):\n    add_form = CustomUserCreationForm\n    form = CustomUserChangeForm\n    model = CustomUser\n    list_display = [\n        \"email\",\n        \"username\",\n        \"age\",\n        \"is_staff\",\n    ]",
        "detail": "accounts.admin",
        "documentation": {}
    },
    {
        "label": "AccountsConfig",
        "kind": 6,
        "importPath": "accounts.apps",
        "description": "accounts.apps",
        "peekOfCode": "class AccountsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"accounts\"",
        "detail": "accounts.apps",
        "documentation": {}
    },
    {
        "label": "CustomUserCreationForm",
        "kind": 6,
        "importPath": "accounts.forms",
        "description": "accounts.forms",
        "peekOfCode": "class CustomUserCreationForm(UserCreationForm):\n    class Meta:\n        model = CustomUser\n        fields = ('username',\n                  'email',\n                  'age',\n                )\nclass CustomUserChangeForm(UserChangeForm):\n    class Meta:\n        model = CustomUser",
        "detail": "accounts.forms",
        "documentation": {}
    },
    {
        "label": "CustomUserChangeForm",
        "kind": 6,
        "importPath": "accounts.forms",
        "description": "accounts.forms",
        "peekOfCode": "class CustomUserChangeForm(UserChangeForm):\n    class Meta:\n        model = CustomUser\n        fields = (  \n                'username',\n                'email',\n                'age',\n                )",
        "detail": "accounts.forms",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "accounts.models",
        "description": "accounts.models",
        "peekOfCode": "class CustomUser(AbstractUser):\n    age = models.PositiveIntegerField(null=True, blank=True)",
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "UsersManagersTests",
        "kind": 6,
        "importPath": "accounts.tests",
        "description": "accounts.tests",
        "peekOfCode": "class UsersManagersTests(TestCase):\n    def test_create_user(self):\n        User = get_user_model()\n        user = User.objects.create_user(\n            username = \"testuser\",\n            email = \"testuser@example.com\",\n            password = \"testpass1234\",\n        )\n        self.assertEqual(user.username, \"testuser\")\n        self.assertEqual(user.email, \"testuser@example.com\")",
        "detail": "accounts.tests",
        "documentation": {}
    },
    {
        "label": "SignupPageTests",
        "kind": 6,
        "importPath": "accounts.tests",
        "description": "accounts.tests",
        "peekOfCode": "class SignupPageTests(TestCase): # new\n    def test_url_exists_at_correct_location_signupview(self):\n        response = self.client.get(\"/accounts/signup/\")\n        self.assertEqual(response.status_code, 200)\n    def test_signup_view_name(self):\n        response = self.client.get(reverse(\"signup\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertTemplateUsed(response, \"registration/signup.html\")\n    def test_signup_form(self):\n        response = self.client.post(",
        "detail": "accounts.tests",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "accounts.urls",
        "description": "accounts.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"signup/\", SignUpView.as_view(), name=\"signup\"),\n]",
        "detail": "accounts.urls",
        "documentation": {}
    },
    {
        "label": "SignUpView",
        "kind": 6,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "class SignUpView(CreateView):\n    form_class = CustomUserCreationForm\n    success_url = reverse_lazy(\"login\")\n    template_name = \"registration/signup.html\"",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "articles.migrations.0001_initial",
        "description": "articles.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Article\",\n            fields=[\n                (",
        "detail": "articles.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "articles.migrations.0002_comment",
        "description": "articles.migrations.0002_comment",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"articles\", \"0001_initial\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Comment\",\n            fields=[\n                (",
        "detail": "articles.migrations.0002_comment",
        "documentation": {}
    },
    {
        "label": "CommentInline",
        "kind": 6,
        "importPath": "articles.admin",
        "description": "articles.admin",
        "peekOfCode": "class CommentInline(admin.TabularInline): # new\n    model = Comment\nclass ArticleAdmin(admin.ModelAdmin):\n    inlines = [\n        CommentInline,\n    ]\n    list_display = [\n        \"title\",\n        \"body\",\n        \"author\",",
        "detail": "articles.admin",
        "documentation": {}
    },
    {
        "label": "ArticleAdmin",
        "kind": 6,
        "importPath": "articles.admin",
        "description": "articles.admin",
        "peekOfCode": "class ArticleAdmin(admin.ModelAdmin):\n    inlines = [\n        CommentInline,\n    ]\n    list_display = [\n        \"title\",\n        \"body\",\n        \"author\",\n    ]\nadmin.site.register(Article, ArticleAdmin)",
        "detail": "articles.admin",
        "documentation": {}
    },
    {
        "label": "ArticlesConfig",
        "kind": 6,
        "importPath": "articles.apps",
        "description": "articles.apps",
        "peekOfCode": "class ArticlesConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"articles\"",
        "detail": "articles.apps",
        "documentation": {}
    },
    {
        "label": "CommentForm",
        "kind": 6,
        "importPath": "articles.forms",
        "description": "articles.forms",
        "peekOfCode": "class CommentForm(forms.ModelForm):\n    class Meta:\n        model = Comment\n        fields = (\"comment\",)",
        "detail": "articles.forms",
        "documentation": {}
    },
    {
        "label": "Article",
        "kind": 6,
        "importPath": "articles.models",
        "description": "articles.models",
        "peekOfCode": "class Article(models.Model):\n    title = models.CharField(max_length=255)\n    body = models.TextField()\n    date = models.DateTimeField(auto_now_add=True)\n    author = models.ForeignKey(\n            settings.AUTH_USER_MODEL,\n            on_delete=models.CASCADE,\n        )\n    def __str__(self):\n            return self.title",
        "detail": "articles.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "kind": 6,
        "importPath": "articles.models",
        "description": "articles.models",
        "peekOfCode": "class Comment(models.Model):\n        article = models.ForeignKey(Article, on_delete=models.CASCADE)\n        comment = models.CharField(max_length=140)\n        author = models.ForeignKey(\n               settings.AUTH_USER_MODEL,\n               on_delete=models.CASCADE, \n        )\n        def __str__(self):\n                return self.comment\n        def get_absolute_url(self):",
        "detail": "articles.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "articles.urls",
        "description": "articles.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"<int:pk>/\", ArticleDetailView.as_view(),\n            name=\"article_detail\"), # new\n    path(\"<int:pk>/edit/\", ArticleUpdateView.as_view(),\n            name=\"article_edit\"), # new\n    path(\"<int:pk>/delete/\", ArticleDeleteView.as_view(),\n            name=\"article_delete\"),\n    path(\"new/\", ArticleCreateView.as_view(), name=\"article_new\"), # new\n    path(\"\", ArticleListView.as_view(), name=\"article_list\"),\n]",
        "detail": "articles.urls",
        "documentation": {}
    },
    {
        "label": "CommentGet",
        "kind": 6,
        "importPath": "articles.views",
        "description": "articles.views",
        "peekOfCode": "class CommentGet(DetailView): # new\n    model = Article\n    template_name = \"article_detail.html\"\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context[\"form\"] = CommentForm()\n        return context\nclass CommentPost(SingleObjectMixin, FormView): # new\n    model = Article\n    form_class = CommentForm",
        "detail": "articles.views",
        "documentation": {}
    },
    {
        "label": "CommentPost",
        "kind": 6,
        "importPath": "articles.views",
        "description": "articles.views",
        "peekOfCode": "class CommentPost(SingleObjectMixin, FormView): # new\n    model = Article\n    form_class = CommentForm\n    template_name = \"article_detail.html\"\n    def post(self, request, *args, **kwargs):\n        self.object = self.get_object()\n        return super().post(request, *args, **kwargs)\n    def form_valid(self, form):\n        comment = form.save(commit=False)\n        comment.article = self.object",
        "detail": "articles.views",
        "documentation": {}
    },
    {
        "label": "ArticleListView",
        "kind": 6,
        "importPath": "articles.views",
        "description": "articles.views",
        "peekOfCode": "class ArticleListView(LoginRequiredMixin, ListView):\n    model = Article\n    template_name = \"article_list.html\"\nclass ArticleDetailView(LoginRequiredMixin, DetailView): # new\n    model = Article\n    template_name = \"article_detail.html\"\n    def get_context_data(self, **kwargs): # new\n        context = super().get_context_data(**kwargs)\n        context[\"form\"] = CommentForm()\n        return context",
        "detail": "articles.views",
        "documentation": {}
    },
    {
        "label": "ArticleDetailView",
        "kind": 6,
        "importPath": "articles.views",
        "description": "articles.views",
        "peekOfCode": "class ArticleDetailView(LoginRequiredMixin, DetailView): # new\n    model = Article\n    template_name = \"article_detail.html\"\n    def get_context_data(self, **kwargs): # new\n        context = super().get_context_data(**kwargs)\n        context[\"form\"] = CommentForm()\n        return context\nclass ArticleDetailView(LoginRequiredMixin, View): # new\n    def get(self, request, *args, **kwargs):\n        view = CommentGet.as_view()",
        "detail": "articles.views",
        "documentation": {}
    },
    {
        "label": "ArticleDetailView",
        "kind": 6,
        "importPath": "articles.views",
        "description": "articles.views",
        "peekOfCode": "class ArticleDetailView(LoginRequiredMixin, View): # new\n    def get(self, request, *args, **kwargs):\n        view = CommentGet.as_view()\n        return view(request, *args, **kwargs)\n    def post(self, request, *args, **kwargs):\n        view = CommentPost.as_view()\n        return view(request, *args, **kwargs)\nclass ArticleUpdateView(LoginRequiredMixin, UserPassesTestMixin,  UpdateView): # new\n    model = Article\n    fields = (",
        "detail": "articles.views",
        "documentation": {}
    },
    {
        "label": "ArticleUpdateView",
        "kind": 6,
        "importPath": "articles.views",
        "description": "articles.views",
        "peekOfCode": "class ArticleUpdateView(LoginRequiredMixin, UserPassesTestMixin,  UpdateView): # new\n    model = Article\n    fields = (\n        \"title\",\n        \"body\",\n    )\n    template_name = \"article_edit.html\"\n    def test_func(self): # new\n        obj = self.get_object()\n        return obj.author == self.request.user",
        "detail": "articles.views",
        "documentation": {}
    },
    {
        "label": "ArticleDeleteView",
        "kind": 6,
        "importPath": "articles.views",
        "description": "articles.views",
        "peekOfCode": "class ArticleDeleteView(LoginRequiredMixin, UserPassesTestMixin, DeleteView): # new\n    model = Article\n    template_name = \"article_delete.html\"\n    success_url = reverse_lazy(\"article_list\")\n    def test_func(self): # new\n        obj = self.get_object()\n        return obj.author == self.request.user\nclass ArticleCreateView(LoginRequiredMixin, CreateView): # new\n    model = Article\n    template_name = \"article_new.html\"",
        "detail": "articles.views",
        "documentation": {}
    },
    {
        "label": "ArticleCreateView",
        "kind": 6,
        "importPath": "articles.views",
        "description": "articles.views",
        "peekOfCode": "class ArticleCreateView(LoginRequiredMixin, CreateView): # new\n    model = Article\n    template_name = \"article_new.html\"\n    fields = (\n        \"title\",\n        \"body\",\n    )\n    def form_valid(self, form):\n        form.instance.author = self.request.user\n        return super().form_valid(form)",
        "detail": "articles.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django_project.asgi",
        "description": "django_project.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "django_project.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-f0*y!0x$*-0)szh3+yl%g(0lyl13h-iwfp&nz1^g4vmgx)3(w4\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-f0*y!0x$*-0)szh3+yl%g(0lyl13h-iwfp&nz1^g4vmgx)3(w4\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"accounts\",",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"accounts\",\n    \"pages\",\n    \"articles\",",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"django_project.urls\"",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "ROOT_URLCONF = \"django_project.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "WSGI_APPLICATION = \"django_project.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nimport os \nSTATIC_URL = '/static/'\nSTATIC_ROOT= os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIR = {",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nimport os \nSTATIC_URL = '/static/'\nSTATIC_ROOT= os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIR = {\n    os.path.join(BASE_DIR, 'public/static')",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nimport os \nSTATIC_URL = '/static/'\nSTATIC_ROOT= os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIR = {\n    os.path.join(BASE_DIR, 'public/static')\n}",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nimport os \nSTATIC_URL = '/static/'\nSTATIC_ROOT= os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIR = {\n    os.path.join(BASE_DIR, 'public/static')\n}\nMEDIA_ROOT = os.path.join(BASE_DIR, 'public/static')",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATIC_ROOT= os.path.join(BASE_DIR, 'staticfiles')\nSTATICFILES_DIR = {\n    os.path.join(BASE_DIR, 'public/static')\n}\nMEDIA_ROOT = os.path.join(BASE_DIR, 'public/static')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\" # new",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIR",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "STATICFILES_DIR = {\n    os.path.join(BASE_DIR, 'public/static')\n}\nMEDIA_ROOT = os.path.join(BASE_DIR, 'public/static')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\" # new\nCRISPY_TEMPLATE_PACK = \"bootstrap5\" #\nEMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\" # new",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'public/static')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\" # new\nCRISPY_TEMPLATE_PACK = \"bootstrap5\" #\nEMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\" # new\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"accounts.CustomUser\"\nLOGIN_REDIRECT_URL = 'home'",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\" # new\nCRISPY_TEMPLATE_PACK = \"bootstrap5\" #\nEMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\" # new\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"accounts.CustomUser\"\nLOGIN_REDIRECT_URL = 'home'\nLOGOUT_REDIRECT_URL = 'home'",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_ALLOWED_TEMPLATE_PACKS",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "CRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\" # new\nCRISPY_TEMPLATE_PACK = \"bootstrap5\" #\nEMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\" # new\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"accounts.CustomUser\"\nLOGIN_REDIRECT_URL = 'home'\nLOGOUT_REDIRECT_URL = 'home'\nTIME_ZONE = \"America/New_York\"",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_TEMPLATE_PACK",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "CRISPY_TEMPLATE_PACK = \"bootstrap5\" #\nEMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\" # new\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"accounts.CustomUser\"\nLOGIN_REDIRECT_URL = 'home'\nLOGOUT_REDIRECT_URL = 'home'\nTIME_ZONE = \"America/New_York\"",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "EMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\" # new\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"accounts.CustomUser\"\nLOGIN_REDIRECT_URL = 'home'\nLOGOUT_REDIRECT_URL = 'home'\nTIME_ZONE = \"America/New_York\"",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"accounts.CustomUser\"\nLOGIN_REDIRECT_URL = 'home'\nLOGOUT_REDIRECT_URL = 'home'\nTIME_ZONE = \"America/New_York\"",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"accounts.CustomUser\"\nLOGIN_REDIRECT_URL = 'home'\nLOGOUT_REDIRECT_URL = 'home'\nTIME_ZONE = \"America/New_York\"",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = 'home'\nLOGOUT_REDIRECT_URL = 'home'\nTIME_ZONE = \"America/New_York\"",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = 'home'\nTIME_ZONE = \"America/New_York\"",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "django_project.settings",
        "description": "django_project.settings",
        "peekOfCode": "TIME_ZONE = \"America/New_York\"",
        "detail": "django_project.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django_project.urls",
        "description": "django_project.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"accounts/\", include(\"accounts.urls\")),\n    path(\"accounts/\", include(\"django.contrib.auth.urls\")),\n    path(\"articles/\", include(\"articles.urls\")), # new\n    path(\"\", include(\"pages.urls\")),\n]",
        "detail": "django_project.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django_project.wsgi",
        "description": "django_project.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "django_project.wsgi",
        "documentation": {}
    },
    {
        "label": "PagesConfig",
        "kind": 6,
        "importPath": "pages.apps",
        "description": "pages.apps",
        "peekOfCode": "class PagesConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"pages\"",
        "detail": "pages.apps",
        "documentation": {}
    },
    {
        "label": "HomePageTests",
        "kind": 6,
        "importPath": "pages.tests",
        "description": "pages.tests",
        "peekOfCode": "class HomePageTests(SimpleTestCase):\n    def test_url_exists_at_correct_location_homepageview(self):\n        response = self.client.get(\"/\")\n        self.assertEqual(response.status_code, 200)\n    def test_homepage_view(self):\n        response = self.client.get(reverse(\"home\"))\n        self.assertEqual(response.status_code, 200)\n        self.assertTemplateUsed(response, \"home.html\")\n        self.assertContains(response, \"Home\")",
        "detail": "pages.tests",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "pages.urls",
        "description": "pages.urls",
        "peekOfCode": "urlpatterns =  [\n    path(\"\", HomePageView.as_view(), name=\"home\")\n]",
        "detail": "pages.urls",
        "documentation": {}
    },
    {
        "label": "HomePageView",
        "kind": 6,
        "importPath": "pages.views",
        "description": "pages.views",
        "peekOfCode": "class HomePageView(TemplateView):\n    template_name = \"home.html\"",
        "detail": "pages.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"django_project.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]